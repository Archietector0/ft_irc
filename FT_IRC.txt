**__FT_IRC__**

(Interner Relay Chat)


__COMMON_INSTRUCTIONS__

* Ваша программа не должна крашится от каких-либо обстоятельств (даже когда она уходит
за пределы памяти), и не должна внезапмно заканчивать работу. Если это случится, ваш
проект оценивается 0.

* Если сабжект предлагает что-либо, вы должны это сделать. Makefile должен
присутствовать, работать и нерелинкаться.

* Ваш Makefile должен содержать следующие првила: $(NAME), all, clean, fclean, re.

* Будет крайне полезно создать тест-пргграммы для своего проекта, даже если эта работа
не требует оценки и проверки. Это даст тебе шанс с легкостью проверить проверить свою
работу и работу своих пиров. Вы найдете эти тесты особенно полезными во время 
своей защиты. Кстати, во время защиты, вы свободны в использовании собственных тестов
и тестов своих пиров.

* Отпраьте свою работу в положенный гит-репозиторий. Только работа на репозитории будет
оценена. Так же будет оцениваться ваще понимание теоретичечкой части проекта. Если
будут заданы вопросы, на которые вы не сможете ответить, то ваша работа будет
оценена в 0.


__INTRODUCTION__

Internet Relay Chat или IRC - это текстовый протокол связи в Интернете. Это мгновенное
общение важно в формате разговора в группах, каналах, но так же важно для общения
один-на-один.

Клиентская программа IRC соединяется с IRC сервером для доступа к определенному каналу.
IRC сервера соединяются между ними для создания глобальной сети с уникальными каналами.


__MANDAORY_PART__

* Вы должны написать IRC сервер на С++ 98.

* Если вам понадобиться много функций из Си, то вы можете их использовать, но
предпочтение лучше отдать функция на С++.

* С++ стандарт должен быть 98 года. Ваш проект должен компилировать именно этим
компилятором.

* Никаких внешниз библиотек, Boost'ов и так далее.

* Старайтесть использовать больше С++ кода, если это возможно (например испольование
<cstring> более приветственно чем <string.h>).

* В сабже и в шкале упоминается опрос, но вы можете использовать эквивалент:
select, kqueue, epoll.

* Общение между клиентом и сервером должно быть на TCP/IP(v4) или (v6).

* Вам не нужно писать клиента.

* Вам не нужно обрабатывать обмен данными между серверами.

* Ваш запуск должен выглядеть следующим образом:
"./ircserv [host:port_network:password_network] <port> <password>"

* Host - имя хоста, по которому IRC должен подключиться, чтобы присоединиться к уже
существующей сети.

* Port_network - это серверный порт, по которому IRC должен подсоединиться к хосту.

* Password_network - пароль для связи с хостои.

* port - это номер порта, на котором ваш сервер будет принимать входящие соединения.

* password -пароль, необходимый любому IRC-клиенту, который хочет подключиться к
вашему серверу.

* Если host, port_network и password_network не поданы на вход, вы должны создать
новую IRC сеть.


Сервер должен иметь возможность обрабатывать несколько клиентов одновременно и никогда
не падать. Разветвление запрещено, все операции ввода-вывода должны быть неблокирующими и использовать только 1 опрос (или эквивалент) для всех (чтение, запись, но также и 
прослушивание, ...) 


